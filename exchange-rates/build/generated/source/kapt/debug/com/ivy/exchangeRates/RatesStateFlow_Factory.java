// Generated by Dagger (https://dagger.dev).
package com.ivy.exchangeRates;

import com.ivy.core.domain.action.settings.basecurrency.BaseCurrencyFlow;
import com.ivy.core.persistence.algorithm.calc.RatesDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RatesStateFlow_Factory implements Factory<RatesStateFlow> {
  private final Provider<BaseCurrencyFlow> baseCurrencyFlowProvider;

  private final Provider<RatesDao> ratesDaoProvider;

  public RatesStateFlow_Factory(Provider<BaseCurrencyFlow> baseCurrencyFlowProvider,
      Provider<RatesDao> ratesDaoProvider) {
    this.baseCurrencyFlowProvider = baseCurrencyFlowProvider;
    this.ratesDaoProvider = ratesDaoProvider;
  }

  @Override
  public RatesStateFlow get() {
    return newInstance(baseCurrencyFlowProvider.get(), ratesDaoProvider.get());
  }

  public static RatesStateFlow_Factory create(Provider<BaseCurrencyFlow> baseCurrencyFlowProvider,
      Provider<RatesDao> ratesDaoProvider) {
    return new RatesStateFlow_Factory(baseCurrencyFlowProvider, ratesDaoProvider);
  }

  public static RatesStateFlow newInstance(BaseCurrencyFlow baseCurrencyFlow, RatesDao ratesDao) {
    return new RatesStateFlow(baseCurrencyFlow, ratesDao);
  }
}
